# 开发环境 Docker Compose 配置
version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: saas_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: gym_saas_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/init-db.js:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - saas_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: saas_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_dev_data:/data
    networks:
      - saas_network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: saas_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: gym_saas_dev
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      JWT_SECRET: dev-secret-key-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-key
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debug port
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - saas_network
    command: ["npm", "run", "start:debug"]

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: saas_frontend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:3000/api
      VITE_APP_TITLE: 健身房管理系统
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend
    networks:
      - saas_network
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  # Nginx 反向代理 (开发环境可选)
  nginx:
    image: nginx:alpine
    container_name: saas_nginx_dev
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - saas_network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  saas_network:
    driver: bridge