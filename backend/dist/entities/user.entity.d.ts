import { BaseEntity } from './base.entity';
import { Brand } from './brand.entity';
import { Store } from './store.entity';
import { Role } from './role.entity';
export declare class User extends BaseEntity {
    username: string;
    email: string;
    phone?: string;
    password: string;
    realName: string;
    nickname?: string;
    avatar?: string;
    gender?: 'male' | 'female' | 'other';
    birthday?: Date;
    idCard?: string;
    address?: string;
    wechatOpenId?: string;
    wechatUnionId?: string;
    lastLoginAt?: Date;
    lastLoginIp?: string;
    failedLoginAttempts: number;
    lockedAt?: Date;
    emailVerifiedAt?: Date;
    phoneVerifiedAt?: Date;
    status: 'active' | 'inactive' | 'suspended' | 'pending';
    preferences?: Record<string, any>;
    brandId: string;
    storeId?: string;
    brand: Brand;
    store?: Store;
    roles?: Role[];
    hashPassword(): Promise<void>;
    validatePassword(password: string): Promise<boolean>;
    isActive(): boolean;
    isLocked(): boolean;
    isEmailVerified(): boolean;
    isPhoneVerified(): boolean;
    hasRole(roleName: string): boolean;
    getPermissions(): string[];
    canAccessStore(storeId: string): boolean;
    resetFailedLoginAttempts(): void;
    incrementFailedLoginAttempts(): void;
}
