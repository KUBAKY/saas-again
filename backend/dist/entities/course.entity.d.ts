import { BaseEntity } from './base.entity';
import { Store } from './store.entity';
import { Coach } from './coach.entity';
import { Booking } from './booking.entity';
import { CourseSchedule } from './course-schedule.entity';
export declare class Course extends BaseEntity {
    name: string;
    description?: string;
    type: 'personal' | 'group' | 'workshop';
    level: 'beginner' | 'intermediate' | 'advanced' | 'all';
    duration: number;
    maxParticipants: number;
    price: number;
    coverImage?: string;
    tags?: string[];
    equipment?: string[];
    requirements?: string;
    caloriesBurn: number;
    rating: number;
    reviewCount: number;
    totalParticipants: number;
    status: 'active' | 'inactive' | 'suspended';
    settings?: Record<string, any>;
    storeId: string;
    coachId?: string;
    store: Store;
    coach?: Coach;
    bookings: Booking[];
    schedules: CourseSchedule[];
    isActive(): boolean;
    isPersonalTraining(): boolean;
    isGroupClass(): boolean;
    canAccommodate(participants: number): boolean;
    getDurationHours(): number;
    updateRating(newRating: number): void;
    incrementParticipants(): void;
    hasTag(tag: string): boolean;
    requiresEquipment(equipment: string): boolean;
    isPopular(): boolean;
    getBookingCount(): number;
    getActiveBookings(): Booking[];
    getCurrentBookings(): Booking[];
}
